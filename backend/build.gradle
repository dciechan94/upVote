buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE"
        classpath 'gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.7.1'
    }
}

plugins {
	id 'io.franzbecker.gradle-lombok' version '2.0'
}

description = 'Uniwersytet Pedagogiczny Voting System - main project'

ext {
    spotbugsExcludesFile = file('config/spotbugs/spotBugsExclude.xml')
    spotbugsExcludesTestFile = file('config/spotbugs/spotBugsExcludeTest.xml')
}

allprojects {
    apply plugin: 'io.spring.dependency-management'
    apply plugin : 'eclipse'
  
    dependencyManagement {
        dependencies {
            dependency "org.hibernate:hibernate-core:5.4.1.Final"
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'com.github.spotbugs'
	apply plugin: 'io.franzbecker.gradle-lombok'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8


    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }
    spotbugs {
        toolVersion = "3.1.12"
        ignoreFailures = false
        effort = "max"
        reportLevel = "low"  // report all bugs
    }

    spotbugsMain {
        excludeFilter file(spotbugsExcludesFile.absolutePath)
    }

    spotbugsTest {
        excludeFilter file(spotbugsExcludesTestFile.absolutePath)
    }

    dependencies {
        compileOnly("org.projectlombok:lombok:1.18.4")
		testCompileOnly("org.projectlombok:lombok:1.18.4")

        //Junit5 @ExtendWith(MockitoExtension.class)
        testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: "${mockitoVersion}"

        //Junit 5
        testCompile("org.junit.jupiter:junit-jupiter-api:${junitVersion}") {
            exclude group: 'org.hamcrest'
        }
        testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
        testCompile("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
        // needed to run JUnit 5 tests in Eclipse without additional config
        testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")

        testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
        testCompile group: 'org.mockito', name: 'mockito-core', version: "${mockitoVersion}"

    }

    tasks.withType(Test) {
        useJUnitPlatform()

        testLogging {
            // lifecycle default logging
            events "passed", "failed", "skipped"
            showStandardStreams = false
            exceptionFormat = "full"

            info {
                events "started", "passed", "skipped", "failed"
                // show stdout/stderr on the console
                showStandardStreams = true
            }
        }

        reports {
            html.enabled = true
        }
    }

    tasks.withType(com.github.spotbugs.SpotBugsTask) {
        reports.xml.enabled = false
        reports.html.enabled = true
    }

    task allDependencies(type: DependencyReportTask, description: 'List dependecies for all subprojects', group: 'help')
}

configure(subprojects - project(':upvote-common')) {
    dependencies {
        testCompile project(path: ':upvote-common', configuration: 'testResources')
    }
}

wrapper {
    gradleVersion = '5.1.1'
    distributionType = Wrapper.DistributionType.BIN
}
